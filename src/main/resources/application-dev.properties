# Properties JPA: connect the localhost port 5432 to the docker container that is used as a connection to our
# PSQL database (more info check docker-compose.yaml comments)

#--- Added this so the server can throw the errors back to client:
server.error.include-message=always
server.error.include-binding-errors=always

#--- Modified URL for AWS RDS instance:
#   (!) Modified profile (i.e. different application properties), shall be set up directly in the IDE
#   by using the following ENV: SPRING_PROFILES_ACTIVE=dev
#   Also, it is important to setup our security group (i.e. virtual firewall to define inbound/outbound rules)
#   The url will also connect directly to our security group endpoint
#   To add the database "student-database" , run a docker instance with the following command : docker run -it --rm postgres:alpine \
#   psql -h aa16rybeqtagx5c.clpriigdlp8v.eu-west-2.rds.amazonaws.com -U nickmonks -d postgres


spring.datasource.url=jdbc:postgresql://aa9cgdzm94eyge.clpriigdlp8v.eu-west-2.rds.amazonaws.com:5432/studentdb
spring.datasource.username=nickmonks
spring.datasource.password=password

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql = true
